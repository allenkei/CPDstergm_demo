rdpg_result1 <- nbs_result1 <- matrix(NA, nrow=length(num_node), ncol=4)
i <- 1
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 10)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
sim_RDPG_list_test <- function(num_seq, n, rho, d) {
change_points <- c(26, 51, 76)
lower_bound <- c(1, 3, 1, 3) / 16
upper_bound <- c(2, 4, 2, 4) / 16
num_time <- 100
sigma <- 1
output <- list()
generate_latent <- function(n, d) {
latent <- matrix(rnorm(n * d, mean = 1, sd = 1), n, d)
return(latent)
}
segments <- c(1, change_points, num_time + 1)
num_segments <- length(segments) - 1
for (rep_iter in 1:num_seq) {
dynamic_adj <- list()
Xt <- generate_latent(n, d)
Yt <- generate_latent(n, d)
for (s in 1:num_segments) {
t_start <- segments[s]
t_end <- segments[s + 1] - 1
W <- matrix(runif(d * d, lower_bound[s], upper_bound[s]), d, d)
for (t in t_start:t_end) {
if (t > 1) {
noise_X <- matrix(rnorm(n * d, 0, sigma), n, d)
Xt <- rho * Xt + (1 - rho) * noise_X
noise_Y <- matrix(rnorm(n * d, 0, sigma), n, d)
Yt <- rho * Yt + (1 - rho) * noise_Y
}
Xt <- Xt / (sqrt(rowSums(Xt^2)) + 1e-5)
Yt <- Yt / (sqrt(rowSums(Yt^2)) + 1e-5)
P <- Xt %*% W %*% t(Yt)
P[P < 0] <- 1e-5
P[P > 1] <- 1 - 1e-5
A <- matrix(rbinom(n * n, size = 1, prob = as.vector(P)), n, n)
diag(A) <- 0
dynamic_adj[[t]] <- A
}
}
output[[rep_iter]] <- dynamic_adj
}
return(output)
}
source("EVAL.R")
num_node <- c(50, 100, 200)
network_stats=c("edges", "mutual")
result1 <- matrix(NA, nrow=length(num_node), ncol=4)
g_result1 <- ker_result1 <- g_stats_result1 <- ker_stats_result1 <- matrix(NA, nrow=length(num_node), ncol=4)
rdpg_result1 <- nbs_result1 <- matrix(NA, nrow=length(num_node), ncol=4)
i <- 1
result1 <- matrix(NA, nrow=length(num_node), ncol=4)
g_result1 <- ker_result1 <- g_stats_result1 <- ker_stats_result1 <- matrix(NA, nrow=length(num_node), ncol=4)
rdpg_result1 <- nbs_result1 <- matrix(NA, nrow=length(num_node), ncol=4)
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 10)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
sim_RDPG_list_test <- function(num_seq, n, rho, d) {
change_points <- c(26, 51, 76)
lower_bound <- c(1, 3, 1, 3) / 8
upper_bound <- c(2, 4, 2, 4) / 8
num_time <- 100
sigma <- 1
output <- list()
generate_latent <- function(n, d) {
latent <- matrix(rnorm(n * d, mean = 1, sd = 1), n, d)
return(latent)
}
segments <- c(1, change_points, num_time + 1)
num_segments <- length(segments) - 1
for (rep_iter in 1:num_seq) {
dynamic_adj <- list()
Xt <- generate_latent(n, d)
Yt <- generate_latent(n, d)
for (s in 1:num_segments) {
t_start <- segments[s]
t_end <- segments[s + 1] - 1
W <- matrix(runif(d * d, lower_bound[s], upper_bound[s]), d, d)
for (t in t_start:t_end) {
if (t > 1) {
noise_X <- matrix(rnorm(n * d, 0, sigma), n, d)
Xt <- rho * Xt + (1 - rho) * noise_X
noise_Y <- matrix(rnorm(n * d, 0, sigma), n, d)
Yt <- rho * Yt + (1 - rho) * noise_Y
}
Xt <- Xt / (sqrt(rowSums(Xt^2)) + 1e-5)
Yt <- Yt / (sqrt(rowSums(Yt^2)) + 1e-5)
P <- Xt %*% W %*% t(Yt)
P[P < 0] <- 1e-5
P[P > 1] <- 1 - 1e-5
A <- matrix(rbinom(n * n, size = 1, prob = as.vector(P)), n, n)
diag(A) <- 0
dynamic_adj[[t]] <- A
}
}
output[[rep_iter]] <- dynamic_adj
}
return(output)
}
source("EVAL.R")
num_node <- c(50, 100, 200)
network_stats=c("edges", "mutual")
result1 <- matrix(NA, nrow=length(num_node), ncol=4)
g_result1 <- ker_result1 <- g_stats_result1 <- ker_stats_result1 <- matrix(NA, nrow=length(num_node), ncol=4)
rdpg_result1 <- nbs_result1 <- matrix(NA, nrow=length(num_node), ncol=4)
i <- 1
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 10)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
sim_RDPG_list_test <- function(num_seq, n, rho, d) {
change_points <- c(26, 51, 76)
lower_bound <- c(1, 3, 1, 3) / 4
upper_bound <- c(2, 4, 2, 4) / 4
num_time <- 100
sigma <- 1
output <- list()
generate_latent <- function(n, d) {
latent <- matrix(rnorm(n * d, mean = 1, sd = 1), n, d)
return(latent)
}
segments <- c(1, change_points, num_time + 1)
num_segments <- length(segments) - 1
for (rep_iter in 1:num_seq) {
dynamic_adj <- list()
Xt <- generate_latent(n, d)
Yt <- generate_latent(n, d)
for (s in 1:num_segments) {
t_start <- segments[s]
t_end <- segments[s + 1] - 1
W <- matrix(runif(d * d, lower_bound[s], upper_bound[s]), d, d)
for (t in t_start:t_end) {
if (t > 1) {
noise_X <- matrix(rnorm(n * d, 0, sigma), n, d)
Xt <- rho * Xt + (1 - rho) * noise_X
noise_Y <- matrix(rnorm(n * d, 0, sigma), n, d)
Yt <- rho * Yt + (1 - rho) * noise_Y
}
Xt <- Xt / (sqrt(rowSums(Xt^2)) + 1e-5)
Yt <- Yt / (sqrt(rowSums(Yt^2)) + 1e-5)
P <- Xt %*% W %*% t(Yt)
P[P < 0] <- 1e-5
P[P > 1] <- 1 - 1e-5
A <- matrix(rbinom(n * n, size = 1, prob = as.vector(P)), n, n)
diag(A) <- 0
dynamic_adj[[t]] <- A
}
}
output[[rep_iter]] <- dynamic_adj
}
return(output)
}
source("EVAL.R")
num_node <- c(50, 100, 200)
network_stats=c("edges", "mutual")
result1 <- matrix(NA, nrow=length(num_node), ncol=4)
g_result1 <- ker_result1 <- g_stats_result1 <- ker_stats_result1 <- matrix(NA, nrow=length(num_node), ncol=4)
rdpg_result1 <- nbs_result1 <- matrix(NA, nrow=length(num_node), ncol=4)
i <- 1
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 10)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
g_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
ker_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
g_stats_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
ker_stats_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
rdpg_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
nbs_result1[i,] <- colMeans(sim_result)
df <- list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
df
i <- 2
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 10)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
g_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
ker_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
g_stats_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
ker_stats_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
rdpg_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
nbs_result1[i,] <- colMeans(sim_result)
df <- list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
df
i <- 3
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 10)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
g_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
ker_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
g_stats_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
ker_stats_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
rdpg_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
nbs_result1[i,] <- colMeans(sim_result)
df <- list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
df
i <- 1
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 10)
sim_result <- CPD_STERGM_list(RDPG_list, directed=TRUE, network_stats, list_of_lambda=10^c(0:4))
result1[i,] <- colMeans(sim_result)
df <- list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
df
sim_RDPG_list_test <- function(num_seq, n, rho, d) {
change_points <- c(26, 51, 76)
lower_bound <- c(0, 1, 0, 1) / 16
upper_bound <- c(1, 2, 1, 2) / 16
num_time <- 100
sigma <- 1
output <- list()
generate_latent <- function(n, d) {
latent <- matrix(rnorm(n * d, mean = 1, sd = 1), n, d)
return(latent)
}
segments <- c(1, change_points, num_time + 1)
num_segments <- length(segments) - 1
for (rep_iter in 1:num_seq) {
dynamic_adj <- list()
Xt <- generate_latent(n, d)
Yt <- generate_latent(n, d)
for (s in 1:num_segments) {
t_start <- segments[s]
t_end <- segments[s + 1] - 1
W <- matrix(runif(d * d, lower_bound[s], upper_bound[s]), d, d)
for (t in t_start:t_end) {
if (t > 1) {
noise_X <- matrix(rnorm(n * d, 0, sigma), n, d)
Xt <- rho * Xt + (1 - rho) * noise_X
noise_Y <- matrix(rnorm(n * d, 0, sigma), n, d)
Yt <- rho * Yt + (1 - rho) * noise_Y
}
Xt <- Xt / (sqrt(rowSums(Xt^2)) + 1e-5)
Yt <- Yt / (sqrt(rowSums(Yt^2)) + 1e-5)
P <- Xt %*% W %*% t(Yt)
P[P < 0] <- 1e-5
P[P > 1] <- 1 - 1e-5
A <- matrix(rbinom(n * n, size = 1, prob = as.vector(P)), n, n)
diag(A) <- 0
dynamic_adj[[t]] <- A
}
}
output[[rep_iter]] <- dynamic_adj
}
return(output)
}
source("EVAL.R")
num_node <- c(50, 100, 200)
network_stats=c("edges", "mutual")
result1 <- matrix(NA, nrow=length(num_node), ncol=4)
g_result1 <- ker_result1 <- g_stats_result1 <- ker_stats_result1 <- matrix(NA, nrow=length(num_node), ncol=4)
rdpg_result1 <- nbs_result1 <- matrix(NA, nrow=length(num_node), ncol=4)
i <- 3
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 10)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
g_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
ker_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
g_stats_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
ker_stats_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
rdpg_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
nbs_result1[i,] <- colMeans(sim_result)
df <- list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
df
i <- 2
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 10)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
g_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
ker_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
g_stats_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
ker_stats_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
rdpg_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
nbs_result1[i,] <- colMeans(sim_result)
df <- list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
df
i <- 1
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 10)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
g_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
ker_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
g_stats_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
ker_stats_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
rdpg_result1[i,] <- colMeans(sim_result)
sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
nbs_result1[i,] <- colMeans(sim_result)
df <- list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
df
result2 <- matrix(NA, nrow=length(num_node), ncol=4)
g_result2 <- ker_result2 <- g_stats_result2 <- ker_stats_result2 <- matrix(NA, nrow=length(num_node), ncol=4)
rdpg_result2 <- nbs_result2 <- matrix(NA, nrow=length(num_node), ncol=4)
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 15)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
g_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
ker_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
g_stats_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
ker_stats_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
rdpg_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
nbs_result2[i,] <- colMeans(sim_result)
i <- 2
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 15)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
g_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
ker_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
g_stats_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
ker_stats_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
rdpg_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
nbs_result2[i,] <- colMeans(sim_result)
df
list(result2, g_result2, ker_result2, g_stats_result2, ker_stats_result2, rdpg_result2, nbs_result2)
i <- 3
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 15)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
g_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
ker_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
g_stats_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
ker_stats_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
rdpg_result2[i,] <- colMeans(sim_result)
sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
nbs_result2[i,] <- colMeans(sim_result)
list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
list(result2, g_result2, ker_result2, g_stats_result2, ker_stats_result2, rdpg_result2, nbs_result2)
result3 <- matrix(NA, nrow=length(num_node), ncol=4)
g_result3 <- ker_result3 <- g_stats_result3 <- ker_stats_result3 <- matrix(NA, nrow=length(num_node), ncol=4)
rdpg_result3 <- nbs_result3 <- matrix(NA, nrow=length(num_node), ncol=4)
i <- 1
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 20)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
g_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
ker_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
g_stats_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
ker_stats_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
rdpg_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
nbs_result3[i,] <- colMeans(sim_result)
i <- 2
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 20)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
g_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
ker_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
g_stats_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
ker_stats_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
rdpg_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
nbs_result3[i,] <- colMeans(sim_result)
i <- 3
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 20)
sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
g_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
ker_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
g_stats_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
ker_stats_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
rdpg_result3[i,] <- colMeans(sim_result)
sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
nbs_result3[i,] <- colMeans(sim_result)
list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
list(result2, g_result2, ker_result2, g_stats_result2, ker_stats_result2, rdpg_result2, nbs_result2)
list(result3, g_result3, ker_result3, g_stats_result3, ker_stats_result3, rdpg_result3, nbs_result3)
for(i in 1:length(num_node)){
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 10)
sim_result <- CPD_STERGM_list(RDPG_list, directed=TRUE, network_stats, list_of_lambda=10^c(0:4))
result1[i,] <- colMeans(sim_result)
# sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
# g_result1[i,] <- colMeans(sim_result)
#
# sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
# ker_result1[i,] <- colMeans(sim_result)
#
# sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
# g_stats_result1[i,] <- colMeans(sim_result)
#
# sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
# ker_stats_result1[i,] <- colMeans(sim_result)
#
# sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
# rdpg_result1[i,] <- colMeans(sim_result)
#
# sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
# nbs_result1[i,] <- colMeans(sim_result)
}
df <- list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
df
save(df, file = 'RDPGd10.Rdata')
for(i in 1:length(num_node)){
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 15)
sim_result <- CPD_STERGM_list(RDPG_list, directed=TRUE, network_stats, list_of_lambda=10^c(0:4))
result2[i,] <- colMeans(sim_result)
# sim_result <- Evaluation_gSeg(RDPG_list, p_threshold=0.05)
# g_result2[i,] <- colMeans(sim_result)
#
# sim_result <- Evaluation_kerSeg(RDPG_list, p_threshold=0.001)
# ker_result2[i,] <- colMeans(sim_result)
#
# sim_result <- Evaluation_gSeg_on_stats(RDPG_list, p_threshold=0.05, num_stats=length(network_stats))
# g_stats_result2[i,] <- colMeans(sim_result)
#
# sim_result <- Evaluation_kerSeg_on_stats(RDPG_list, p_threshold=0.001, num_stats=length(network_stats))
# ker_stats_result2[i,] <- colMeans(sim_result)
#
# sim_result <- Evaluation_RDPG(RDPG_list, M=50, d=5, delta=5)
# rdpg_result2[i,] <- colMeans(sim_result)
#
# sim_result <- Evaluation_NBS(RDPG_list, M=15, delta=5)
# nbs_result2[i,] <- colMeans(sim_result)
}
df <- list(result2, g_result2, ker_result2, g_stats_result2, ker_stats_result2, rdpg_result2, nbs_result2)
df
save(df, file = 'RDPGd15.Rdata')
i <- 1
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 20)
sim_result <- CPD_STERGM_list(RDPG_list, directed=TRUE, network_stats, list_of_lambda=10^c(0:4))
result3[i,] <- colMeans(sim_result)
list(result3, g_result3, ker_result3, g_stats_result3, ker_stats_result3, rdpg_result3, nbs_result3)
i <- 2
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 20)
sim_result <- CPD_STERGM_list(RDPG_list, directed=TRUE, network_stats, list_of_lambda=10^c(0:4))
result3[i,] <- colMeans(sim_result)
list(result3, g_result3, ker_result3, g_stats_result3, ker_stats_result3, rdpg_result3, nbs_result3)
save(df, file = 'RDPGd20.Rdata')
i <- 3
set.seed(1)
RDPG_list <- sim_RDPG_list_test(num_seq = 10, n = num_node[i], rho = 0.9, d = 20)
sim_result <- CPD_STERGM_list(RDPG_list, directed=TRUE, network_stats, list_of_lambda=10^c(0:4))
result3[i,] <- colMeans(sim_result)
df <- list(result3, g_result3, ker_result3, g_stats_result3, ker_stats_result3, rdpg_result3, nbs_result3)
save(df, file = 'RDPGd20.Rdata')
df
list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
df <- list(result1, g_result1, ker_result1, g_stats_result1, ker_stats_result1, rdpg_result1, nbs_result1)
save(df, file = 'RDPGd10.Rdata')
df <- list(result2, g_result2, ker_result2, g_stats_result2, ker_stats_result2, rdpg_result2, nbs_result2)
df
save(df, file = 'RDPGd15.Rdata')
df <- list(result3, g_result3, ker_result3, g_stats_result3, ker_stats_result3, rdpg_result3, nbs_result3)
save(df, file = 'RDPGd20.Rdata')
list(result2, g_result2, ker_result2, g_stats_result2, ker_stats_result2, rdpg_result2, nbs_result2)
list(result3, g_result3, ker_result3, g_stats_result3, ker_stats_result3, rdpg_result3, nbs_result3)
list(result3, g_result3, ker_result3, g_stats_result3, ker_stats_result3, rdpg_result3, nbs_result3)
load("~/Documents/GitHub/CPDstergm_demo/sim_result/SBMrho00.Rdata")
df
load("~/Documents/GitHub/CPDstergm_demo/sim_result/SBMrho05.Rdata")
df
df
load("~/Documents/GitHub/CPDstergm_demo/sim_result/SBMrho09.Rdata")
df
